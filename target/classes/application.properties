# Spring configuration for database connectivity. These values can be
# overridden at runtime via environment variables on Render.com or locally.
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:mysql://localhost:3306/resume_db?useSSL=false&serverTimezone=UTC}
spring.datasource.username=${JDBC_DATABASE_USERNAME:root}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:password}

# Automatically update the database schema to match the JPA entities. In
# production you may want to change this to validate or none.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Configure Thymeleaf to disable caching during development.
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML

# Weather API configuration. Provide your OpenWeatherMap API key as an
# environment variable named WEATHER_API_KEY when deploying. Optionally you
# can set WEATHER_API_URL to override the default endpoint.
weather.api.key=${WEATHER_API_KEY:}
weather.api.url=${WEATHER_API_URL:https://api.openweathermap.org/data/2.5/weather}

# Mail configuration. Configure your mail server credentials via environment
# variables. Render.com allows secure environment variable storage for these.
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# The recipient address for contact form submissions. Defaults to the
# project owner's email; override with MAIL_TO_ADDRESS if needed.
mail.to.address=${MAIL_TO_ADDRESS:mehmetaliszgn@gmail.com}

# Logging
logging.level.org.springframework=INFO